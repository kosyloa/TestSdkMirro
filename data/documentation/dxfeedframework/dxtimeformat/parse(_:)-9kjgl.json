{"identifier":{"url":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/DXTimeFormat\/parse(_:)-9kjgl","interfaceLanguage":"swift"},"metadata":{"title":"parse(_:)","externalID":"s:15DXFeedFramework12DXTimeFormatC5parsey10Foundation4DateVSgSSKF","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","extendedModule":"DXFeedFramework","modules":[{"name":"DXFeedFramework"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"abstract":[{"type":"text","text":"Converts the specified string representation of a date and time"}],"hierarchy":{"paths":[["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/DXTimeFormat"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"String value to parse."}]}],"name":"string"}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"Date parsed from value."}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If no time zone is specified in the parsed string, the string is assumed to denote a local time,"},{"text":" ","type":"text"},{"type":"text","text":"and converted to current Date."}]},{"inlineContent":[{"text":"It accepts the following formats.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"0"}]}]},{"type":"paragraph","inlineContent":[{"text":"is parsed as zero time in UTC.","type":"text"}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"long-value-in-milliseconds"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The value in milliseconds since Unix epoch since Unix epoch.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"It should be positive and have at least 9 digits"},{"type":"text","text":" "},{"text":"(otherwise it could not be distinguished from date in format ‘yyyymmdd’).","type":"text"},{"text":" ","type":"text"},{"text":"Each date since 1970-01-03 can be represented in this form.","type":"text"}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"date"}]},{"text":"[time][timezone]","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If time is missing it is supposed to be ‘00:00:00’."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"date"}]},{"type":"text","text":" is one of:"}]},{"syntax":null,"code":["yyyy-MM-dd","","yyyyMMdd"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"time"}],"type":"strong"},{"type":"text","text":" is one of:"}]},{"code":["HH:mm:ss[.sss]","","HHmmss[.sss]"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"timezone"}],"type":"strong"},{"type":"text","text":" is one of:"}]},{"syntax":null,"type":"codeListing","code":["[+-]HH:mm","","[+-]HHmm","","Z for UTC."]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dxfeedframework\/dxtimeformat\/parse(_:)-9kjgl"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"references":{"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/DXTimeFormat":{"kind":"symbol","navigatorTitle":[{"text":"DXTimeFormat","kind":"identifier"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/DXTimeFormat","url":"\/documentation\/dxfeedframework\/dxtimeformat","title":"DXTimeFormat","type":"topic","abstract":[{"type":"text","text":"Utility class for parsing and formatting dates and times in ISO-compatible format."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DXTimeFormat"}],"role":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework":{"kind":"symbol","role":"collection","url":"\/documentation\/dxfeedframework","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","abstract":[],"title":"DXFeedFramework","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/DXTimeFormat/parse(_:)-9kjgl":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/DXTimeFormat\/parse(_:)-9kjgl","abstract":[{"type":"text","text":"Converts the specified string representation of a date and time"}],"url":"\/documentation\/dxfeedframework\/dxtimeformat\/parse(_:)-9kjgl","kind":"symbol","type":"topic","title":"parse(_:)"}}}