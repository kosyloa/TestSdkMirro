{"hierarchy":{"paths":[["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()"},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/dxfeedframework\/promise\/hasexception()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns ","type":"text"},{"type":"strong","inlineContent":[{"text":"true","type":"text"}]},{"type":"text","text":" when computation has completed exceptionally or was cancelled."},{"type":"text","text":" "},{"text":"Use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()"},{"type":"text","text":" method to get the exceptional outcome of the computation."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasException"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]}]}],"metadata":{"modules":[{"name":"DXFeedFramework"}],"symbolKind":"method","role":"symbol","title":"hasException()","externalID":"s:15DXFeedFramework7PromiseC12hasExceptionSbyF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasException"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"kind":"symbol","references":{"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Promise","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Result of a computation that will be completed normally or exceptionally in the future."},{"text":" ","type":"text"},{"text":"This class is designed to represent a promise to deliver certain result.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Promise"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise","url":"\/documentation\/dxfeedframework\/promise","role":"symbol","title":"Promise"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasException()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hasException","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns "},{"type":"strong","inlineContent":[{"type":"text","text":"true"}]},{"type":"text","text":" when computation has completed exceptionally or was cancelled."},{"text":" ","type":"text"},{"text":"Use ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","type":"reference","isActive":true},{"text":" method to get the exceptional outcome of the computation.","type":"text"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","url":"\/documentation\/dxfeedframework\/promise\/hasexception()","role":"symbol","title":"hasException()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isCancelled()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isCancelled","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","type":"topic","abstract":[{"text":"Returns ","type":"text"},{"type":"strong","inlineContent":[{"text":"true","type":"text"}]},{"text":" when computation was canceled.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Use "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","type":"reference","isActive":true},{"type":"text","text":" method to get the corresponding exception."}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","url":"\/documentation\/dxfeedframework\/promise\/iscancelled()","role":"symbol","title":"isCancelled()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework":{"role":"collection","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","abstract":[],"url":"\/documentation\/dxfeedframework","type":"topic","title":"DXFeedFramework","kind":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getException()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getException","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO","text":"GraalException","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns exceptional outcome of computation. If computation has no  "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()"},{"text":" exception,","type":"text"},{"type":"text","text":" "},{"text":"then this method returns nil. If computation has completed exceptionally or was cancelled, then","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the result of this method is not nil."},{"type":"text","text":" "},{"type":"text","text":"If computation was "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()"},{"text":" cancelled, then this method returns an","type":"text"},{"text":" ","type":"text"},{"text":"instance of GraalException.","type":"text"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","url":"\/documentation\/dxfeedframework\/promise\/getexception()","role":"symbol","title":"getException()"}}}