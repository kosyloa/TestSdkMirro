{"abstract":[{"text":"Returns ","type":"text"},{"type":"strong","inlineContent":[{"text":"true","type":"text"}]},{"text":" when computation was canceled.","type":"text"},{"type":"text","text":" "},{"text":"Use ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","isActive":true},{"text":" method to get the corresponding exception.","type":"text"}],"metadata":{"title":"isCancelled()","externalID":"s:15DXFeedFramework7PromiseC11isCancelledSbyF","modules":[{"name":"DXFeedFramework"}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isCancelled","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol"},"variants":[{"paths":["\/documentation\/dxfeedframework\/promise\/iscancelled()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isCancelled","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["macOS"]}],"kind":"declarations"}],"references":{"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isCancelled()":{"title":"isCancelled()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isCancelled","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns "},{"type":"strong","inlineContent":[{"type":"text","text":"true"}]},{"text":" when computation was canceled.","type":"text"},{"type":"text","text":" "},{"text":"Use ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","isActive":true},{"type":"text","text":" method to get the corresponding exception."}],"url":"\/documentation\/dxfeedframework\/promise\/iscancelled()","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise":{"type":"topic","url":"\/documentation\/dxfeedframework\/promise","navigatorTitle":[{"text":"Promise","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Promise","kind":"identifier"}],"title":"Promise","abstract":[{"type":"text","text":"Result of a computation that will be completed normally or exceptionally in the future."},{"type":"text","text":" "},{"type":"text","text":"This class is designed to represent a promise to deliver certain result."}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasException()":{"title":"hasException()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasException","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns "},{"inlineContent":[{"type":"text","text":"true"}],"type":"strong"},{"type":"text","text":" when computation has completed exceptionally or was cancelled."},{"text":" ","type":"text"},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()"},{"type":"text","text":" method to get the exceptional outcome of the computation."}],"url":"\/documentation\/dxfeedframework\/promise\/hasexception()","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework":{"kind":"symbol","role":"collection","url":"\/documentation\/dxfeedframework","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","abstract":[],"title":"DXFeedFramework","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getException()":{"title":"getException()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getException","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"GraalException","preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns exceptional outcome of computation. If computation has no  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()"},{"type":"text","text":" exception,"},{"text":" ","type":"text"},{"type":"text","text":"then this method returns nil. If computation has completed exceptionally or was cancelled, then"},{"text":" ","type":"text"},{"type":"text","text":"the result of this method is not nil."},{"type":"text","text":" "},{"type":"text","text":"If computation was "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()"},{"type":"text","text":" cancelled, then this method returns an"},{"type":"text","text":" "},{"text":"instance of GraalException.","type":"text"}],"url":"\/documentation\/dxfeedframework\/promise\/getexception()","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","type":"topic"}}}