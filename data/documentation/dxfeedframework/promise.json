{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Promise"}],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"title":"Promise","navigatorTitle":[{"text":"Promise","kind":"identifier"}],"externalID":"s:15DXFeedFramework7PromiseC","role":"symbol","modules":[{"name":"DXFeedFramework"}],"roleHeading":"Class","symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Promise","kind":"identifier"}]},"identifier":{"url":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Result of a computation that will be completed normally or exceptionally in the future.","type":"text"},{"text":" ","type":"text"},{"text":"This class is designed to represent a promise to deliver certain result.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await(millis:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/awaitWithoutException(millis:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResult()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResults()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/whenDone(handler:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/PromiseHandler"],"title":"Type Aliases"},{"title":"Type Methods","identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/allOf(promises:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dxfeedframework\/promise"]}],"references":{"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getResults()":{"type":"topic","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResults()","abstract":[{"text":"Returns results of computation. If computation has no result, then this method returns nil.","type":"text"}],"url":"\/documentation\/dxfeedframework\/promise\/getresults()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getResults"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"MarketEvent","preciseIdentifier":"s:15DXFeedFramework11MarketEventC","kind":"typeIdentifier"},{"kind":"text","text":"]?"}],"role":"symbol","title":"getResults()","kind":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/awaitWithoutException(millis:)":{"url":"\/documentation\/dxfeedframework\/promise\/awaitwithoutexception(millis:)","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/awaitWithoutException(millis:)","abstract":[{"text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If the wait times out, then the computation is "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","type":"reference","isActive":true},{"type":"text","text":" cancelled and exception is thrown."}],"type":"topic","title":"awaitWithoutException(millis:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"awaitWithoutException","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"millis"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/allOf(promises:)":{"title":"allOf(promises:)","url":"\/documentation\/dxfeedframework\/promise\/allof(promises:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allOf"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"promises"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:15DXFeedFramework7PromiseC","text":"Promise","kind":"typeIdentifier"},{"kind":"text","text":"]) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Promise","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC"},{"text":"?","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Returns a new promise that "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true},{"text":" completes when all promises from the given array","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"complete normally or exceptionally."},{"text":" ","type":"text"},{"text":"The results of the given promises are not reflected in the returned promise, but may be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"obtained by inspecting them individually. If no promises are provided, returns a promise completed"},{"type":"text","text":" "},{"type":"text","text":"with the value null."},{"type":"text","text":" "},{"text":"When the resulting promise completes for any reason ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true,"type":"reference"},{"text":" canceled, for example)","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"then all of the promises from the given array are canceled."}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/allOf(promises:)","type":"topic","kind":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasException()":{"abstract":[{"text":"Returns ","type":"text"},{"inlineContent":[{"text":"true","type":"text"}],"type":"strong"},{"type":"text","text":" when computation has completed exceptionally or was cancelled."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","isActive":true},{"text":" method to get the exceptional outcome of the computation.","type":"text"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","type":"topic","title":"hasException()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasException"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/dxfeedframework\/promise\/hasexception()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isCancelled()":{"abstract":[{"type":"text","text":"Returns "},{"inlineContent":[{"type":"text","text":"true"}],"type":"strong"},{"type":"text","text":" when computation was canceled."},{"type":"text","text":" "},{"text":"Use ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","isActive":true},{"type":"text","text":" method to get the corresponding exception."}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","type":"topic","title":"isCancelled()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isCancelled","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","url":"\/documentation\/dxfeedframework\/promise\/iscancelled()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/await()":{"type":"topic","kind":"symbol","url":"\/documentation\/dxfeedframework\/promise\/await()","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"await","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Promise","preciseIdentifier":"s:15DXFeedFramework7PromiseC","kind":"typeIdentifier"}],"title":"await()","abstract":[{"text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This method waits forever."}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/complete(result:)":{"url":"\/documentation\/dxfeedframework\/promise\/complete(result:)","title":"complete(result:)","abstract":[{"text":"Completes computation normally with a specified result.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This method does nothing if computation has already "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","type":"reference","isActive":true},{"type":"text","text":" completed"},{"type":"text","text":" "},{"text":"(normally, exceptionally, or was cancelled),","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"complete"},{"kind":"text","text":"("},{"text":"result","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15DXFeedFramework11MarketEventC","text":"MarketEvent","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getException()":{"abstract":[{"type":"text","text":"Returns exceptional outcome of computation. If computation has no  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()"},{"type":"text","text":" exception,"},{"type":"text","text":" "},{"type":"text","text":"then this method returns nil. If computation has completed exceptionally or was cancelled, then"},{"text":" ","type":"text"},{"type":"text","text":"the result of this method is not nil."},{"type":"text","text":" "},{"type":"text","text":"If computation was "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","isActive":true},{"type":"text","text":" cancelled, then this method returns an"},{"text":" ","type":"text"},{"text":"instance of GraalException.","type":"text"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","type":"topic","title":"getException()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getException"},{"kind":"text","text":"() -> "},{"text":"GraalException","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO"},{"text":"?","kind":"text"}],"role":"symbol","url":"\/documentation\/dxfeedframework\/promise\/getexception()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getResult()":{"abstract":[{"text":"Returns results of computation. If computation has no result, then this method returns nil.","type":"text"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResult()","title":"getResult()","type":"topic","url":"\/documentation\/dxfeedframework\/promise\/getresult()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getResult"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"MarketEvent","preciseIdentifier":"s:15DXFeedFramework11MarketEventC"},{"kind":"text","text":"?"}],"role":"symbol","kind":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/await(millis:)":{"type":"topic","title":"await(millis:)","abstract":[{"type":"text","text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion."},{"text":" ","type":"text"},{"type":"text","text":"If the wait times out, then the computation is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()"},{"text":" cancelled and exception is thrown.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"await","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"millis"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15DXFeedFramework7PromiseC","text":"Promise","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await(millis:)","url":"\/documentation\/dxfeedframework\/promise\/await(millis:)"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasResult()":{"type":"topic","title":"hasResult()","abstract":[{"type":"text","text":"Returns "},{"type":"strong","inlineContent":[{"type":"text","text":"true"}]},{"text":" when computation has completed normally.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","isActive":true},{"text":" method to get the result of the computation.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasResult","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","url":"\/documentation\/dxfeedframework\/promise\/hasresult()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/PromiseHandler":{"type":"topic","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/PromiseHandler","abstract":[],"url":"\/documentation\/dxfeedframework\/promise\/promisehandler","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PromiseHandler"}],"navigatorTitle":[{"kind":"identifier","text":"PromiseHandler"}],"role":"symbol","title":"Promise.PromiseHandler","kind":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Promise"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Promise"}],"url":"\/documentation\/dxfeedframework\/promise","abstract":[{"type":"text","text":"Result of a computation that will be completed normally or exceptionally in the future."},{"text":" ","type":"text"},{"type":"text","text":"This class is designed to represent a promise to deliver certain result."}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise","type":"topic","title":"Promise","kind":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/whenDone(handler:)":{"url":"\/documentation\/dxfeedframework\/promise\/whendone(handler:)","title":"whenDone(handler:)","abstract":[{"text":"Registers a handler to be invoked exactly once when computation ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true,"type":"reference"},{"text":" completes.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The handler’s  method is invoked immediately when this computation has already completed,"},{"text":" ","type":"text"},{"type":"text","text":"otherwise it will be invoked "},{"inlineContent":[{"type":"text","text":"synchronously"}],"type":"strong"},{"text":" in the future when computation","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","isActive":true},{"text":" completes normally,","type":"text"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","isActive":true},{"type":"text","text":" exceptionally,"},{"type":"text","text":" "},{"type":"text","text":"or is "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","type":"reference","isActive":true},{"type":"text","text":" cancelled from the same thread that had invoked one of the completion methods."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenDone"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PromiseHandler","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC0C7Handlera"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/whenDone(handler:)"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework":{"title":"DXFeedFramework","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","kind":"symbol","url":"\/documentation\/dxfeedframework"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/cancel()":{"url":"\/documentation\/dxfeedframework\/promise\/cancel()","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","abstract":[{"text":"Cancels computation. This method does nothing if computation has already ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","type":"reference","isActive":true},{"type":"text","text":" completed."}],"type":"topic","title":"cancel()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cancel","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isDone()":{"url":"\/documentation\/dxfeedframework\/promise\/isdone()","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","abstract":[{"type":"text","text":"Returns "},{"type":"strong","inlineContent":[{"type":"text","text":"true"}]},{"type":"text","text":" when computation has"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)"},{"type":"text","text":" completed normally,"},{"text":" ","type":"text"},{"type":"text","text":"or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)"},{"type":"text","text":" exceptionally,"},{"type":"text","text":" "},{"text":"or was ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","type":"reference"},{"type":"text","text":" canceled"}],"type":"topic","title":"isDone()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isDone","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/completeExceptionally(_:)":{"type":"topic","title":"completeExceptionally(_:)","abstract":[{"type":"text","text":"Completes computation exceptionally with a specified exception."},{"text":" ","type":"text"},{"type":"text","text":"This method does nothing if computation has already "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","type":"reference","isActive":true},{"type":"text","text":" completed,"},{"type":"text","text":" "},{"type":"text","text":"otherwise "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","isActive":true,"type":"reference"},{"type":"text","text":" will return the specified exception."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"completeExceptionally","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO","text":"GraalException","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","url":"\/documentation\/dxfeedframework\/promise\/completeexceptionally(_:)"}}}