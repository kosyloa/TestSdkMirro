{"sections":[],"hierarchy":{"paths":[["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Promise"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dxfeedframework\/promise"]}],"abstract":[{"type":"text","text":"Result of a computation that will be completed normally or exceptionally in the future."},{"type":"text","text":" "},{"text":"This class is designed to represent a promise to deliver certain result.","type":"text"}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Promise","kind":"identifier"}],"navigatorTitle":[{"text":"Promise","kind":"identifier"}],"externalID":"s:15DXFeedFramework7PromiseC","role":"symbol","modules":[{"name":"DXFeedFramework"}],"symbolKind":"class","roleHeading":"Class","title":"Promise"},"identifier":{"url":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await(millis:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/awaitWithoutException(millis:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResult()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResults()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/whenDone(handler:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/PromiseHandler"]},{"identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/allOf(promises:)"],"title":"Type Methods"}],"references":{"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/await(millis:)":{"url":"\/documentation\/dxfeedframework\/promise\/await(millis:)","abstract":[{"text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If the wait times out, then the computation is "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true},{"type":"text","text":" cancelled and exception is thrown."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"await","kind":"identifier"},{"text":"(","kind":"text"},{"text":"millis","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC","text":"Promise"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await(millis:)","role":"symbol","title":"await(millis:)"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/cancel()":{"role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","url":"\/documentation\/dxfeedframework\/promise\/cancel()","kind":"symbol","abstract":[{"type":"text","text":"Cancels computation. This method does nothing if computation has already "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()"},{"type":"text","text":" completed."}],"title":"cancel()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cancel","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isDone()":{"role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","url":"\/documentation\/dxfeedframework\/promise\/isdone()","kind":"symbol","abstract":[{"text":"Returns ","type":"text"},{"inlineContent":[{"type":"text","text":"true"}],"type":"strong"},{"type":"text","text":" when computation has"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)"},{"type":"text","text":" completed normally,"},{"text":" ","type":"text"},{"type":"text","text":"or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)"},{"type":"text","text":" exceptionally,"},{"text":" ","type":"text"},{"type":"text","text":"or was "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()"},{"type":"text","text":" canceled"}],"title":"isDone()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isDone","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isCancelled()":{"url":"\/documentation\/dxfeedframework\/promise\/iscancelled()","abstract":[{"type":"text","text":"Returns "},{"inlineContent":[{"type":"text","text":"true"}],"type":"strong"},{"type":"text","text":" when computation was canceled."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()"},{"type":"text","text":" method to get the corresponding exception."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isCancelled","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","role":"symbol","title":"isCancelled()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework":{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","url":"\/documentation\/dxfeedframework","role":"collection","kind":"symbol","type":"topic","title":"DXFeedFramework","abstract":[]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/allOf(promises:)":{"url":"\/documentation\/dxfeedframework\/promise\/allof(promises:)","abstract":[{"type":"text","text":"Returns a new promise that "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()"},{"type":"text","text":" completes when all promises from the given array"},{"text":" ","type":"text"},{"type":"text","text":"complete normally or exceptionally."},{"type":"text","text":" "},{"text":"The results of the given promises are not reflected in the returned promise, but may be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"obtained by inspecting them individually. If no promises are provided, returns a promise completed"},{"type":"text","text":" "},{"text":"with the value null.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"When the resulting promise completes for any reason "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true},{"type":"text","text":" canceled, for example)"},{"text":" ","type":"text"},{"text":"then all of the promises from the given array are canceled.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"allOf","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promises"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Promise","preciseIdentifier":"s:15DXFeedFramework7PromiseC"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Promise","preciseIdentifier":"s:15DXFeedFramework7PromiseC"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/allOf(promises:)","role":"symbol","title":"allOf(promises:)"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/awaitWithoutException(millis:)":{"url":"\/documentation\/dxfeedframework\/promise\/awaitwithoutexception(millis:)","abstract":[{"type":"text","text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion."},{"type":"text","text":" "},{"type":"text","text":"If the wait times out, then the computation is "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true},{"text":" cancelled and exception is thrown.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"awaitWithoutException"},{"kind":"text","text":"("},{"text":"millis","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/awaitWithoutException(millis:)","role":"symbol","title":"awaitWithoutException(millis:)"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasResult()":{"url":"\/documentation\/dxfeedframework\/promise\/hasresult()","abstract":[{"type":"text","text":"Returns "},{"inlineContent":[{"type":"text","text":"true"}],"type":"strong"},{"text":" when computation has completed normally.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","isActive":true},{"text":" method to get the result of the computation.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasResult"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","role":"symbol","title":"hasResult()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/completeExceptionally(_:)":{"role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","url":"\/documentation\/dxfeedframework\/promise\/completeexceptionally(_:)","kind":"symbol","abstract":[{"type":"text","text":"Completes computation exceptionally with a specified exception."},{"type":"text","text":" "},{"type":"text","text":"This method does nothing if computation has already "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true},{"text":" completed,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"otherwise "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","type":"reference","isActive":true},{"text":" will return the specified exception.","type":"text"}],"title":"completeExceptionally(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"completeExceptionally","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO","text":"GraalException"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/whenDone(handler:)":{"role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/whenDone(handler:)","url":"\/documentation\/dxfeedframework\/promise\/whendone(handler:)","kind":"symbol","abstract":[{"text":"Registers a handler to be invoked exactly once when computation ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()"},{"type":"text","text":" completes."},{"type":"text","text":" "},{"text":"The handler’s  method is invoked immediately when this computation has already completed,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"otherwise it will be invoked "},{"type":"strong","inlineContent":[{"text":"synchronously","type":"text"}]},{"text":" in the future when computation","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","type":"reference","isActive":true},{"text":" completes normally,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)"},{"type":"text","text":" exceptionally,"},{"text":" ","type":"text"},{"type":"text","text":"or is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()"},{"type":"text","text":" cancelled from the same thread that had invoked one of the completion methods."}],"title":"whenDone(handler:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"whenDone","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15DXFeedFramework7PromiseC0C7Handlera","text":"PromiseHandler","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/PromiseHandler":{"role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/PromiseHandler","url":"\/documentation\/dxfeedframework\/promise\/promisehandler","kind":"symbol","abstract":[],"title":"Promise.PromiseHandler","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PromiseHandler","kind":"identifier"}],"navigatorTitle":[{"text":"PromiseHandler","kind":"identifier"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getResults()":{"url":"\/documentation\/dxfeedframework\/promise\/getresults()","abstract":[{"type":"text","text":"Returns results of computation. If computation has no result, then this method returns nil."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getResults","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework11MarketEventC","text":"MarketEvent"},{"text":"]?","kind":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResults()","role":"symbol","title":"getResults()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/await()":{"role":"symbol","abstract":[{"type":"text","text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion."},{"type":"text","text":" "},{"type":"text","text":"This method waits forever."}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"await"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Promise","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC"}],"title":"await()","kind":"symbol","type":"topic","url":"\/documentation\/dxfeedframework\/promise\/await()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getException()":{"role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","url":"\/documentation\/dxfeedframework\/promise\/getexception()","kind":"symbol","abstract":[{"type":"text","text":"Returns exceptional outcome of computation. If computation has no  "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","type":"reference","isActive":true},{"type":"text","text":" exception,"},{"type":"text","text":" "},{"type":"text","text":"then this method returns nil. If computation has completed exceptionally or was cancelled, then"},{"type":"text","text":" "},{"text":"the result of this method is not nil.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If computation was "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()"},{"type":"text","text":" cancelled, then this method returns an"},{"text":" ","type":"text"},{"type":"text","text":"instance of GraalException."}],"title":"getException()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getException"},{"text":"() -> ","kind":"text"},{"text":"GraalException","preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasException()":{"role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"inlineContent":[{"text":"true","type":"text"}],"type":"strong"},{"type":"text","text":" when computation has completed exceptionally or was cancelled."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","type":"reference","isActive":true},{"text":" method to get the exceptional outcome of the computation.","type":"text"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasException","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","title":"hasException()","type":"topic","url":"\/documentation\/dxfeedframework\/promise\/hasexception()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/complete(result:)":{"role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","url":"\/documentation\/dxfeedframework\/promise\/complete(result:)","kind":"symbol","abstract":[{"text":"Completes computation normally with a specified result.","type":"text"},{"type":"text","text":" "},{"text":"This method does nothing if computation has already ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true},{"type":"text","text":" completed"},{"type":"text","text":" "},{"type":"text","text":"(normally, exceptionally, or was cancelled),"}],"title":"complete(result:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"complete"},{"kind":"text","text":"("},{"text":"result","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MarketEvent","preciseIdentifier":"s:15DXFeedFramework11MarketEventC","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise":{"role":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise","url":"\/documentation\/dxfeedframework\/promise","kind":"symbol","abstract":[{"text":"Result of a computation that will be completed normally or exceptionally in the future.","type":"text"},{"type":"text","text":" "},{"text":"This class is designed to represent a promise to deliver certain result.","type":"text"}],"title":"Promise","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Promise","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Promise"}],"type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getResult()":{"role":"symbol","abstract":[{"text":"Returns results of computation. If computation has no result, then this method returns nil.","type":"text"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResult()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getResult"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"MarketEvent","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework11MarketEventC"},{"text":"?","kind":"text"}],"kind":"symbol","title":"getResult()","type":"topic","url":"\/documentation\/dxfeedframework\/promise\/getresult()"}}}