{"topicSections":[{"identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await(millis:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/awaitWithoutException(millis:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResult()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResults()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/whenDone(handler:)"],"title":"Instance Methods"},{"title":"Type Aliases","identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/PromiseHandler"]},{"title":"Type Methods","identifiers":["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/allOf(promises:)"]}],"kind":"symbol","abstract":[{"type":"text","text":"Result of a computation that will be completed normally or exceptionally in the future."},{"type":"text","text":" "},{"type":"text","text":"This class is designed to represent a promise to deliver certain result."}],"identifier":{"url":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"Promise"}],"role":"symbol","externalID":"s:15DXFeedFramework7PromiseC","modules":[{"name":"DXFeedFramework"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Promise"}],"roleHeading":"Class","symbolKind":"class","title":"Promise"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Promise","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dxfeedframework\/promise"]}],"hierarchy":{"paths":[["doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework"]]},"sections":[],"references":{"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework":{"kind":"symbol","role":"collection","url":"\/documentation\/dxfeedframework","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework","abstract":[],"title":"DXFeedFramework","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/awaitWithoutException(millis:)":{"kind":"symbol","title":"awaitWithoutException(millis:)","role":"symbol","abstract":[{"type":"text","text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion."},{"type":"text","text":" "},{"type":"text","text":"If the wait times out, then the computation is "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true},{"type":"text","text":" cancelled and exception is thrown."}],"type":"topic","url":"\/documentation\/dxfeedframework\/promise\/awaitwithoutexception(millis:)","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/awaitWithoutException(millis:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"awaitWithoutException"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"millis"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getException()":{"title":"getException()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getException","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"GraalException","preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns exceptional outcome of computation. If computation has no  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()"},{"type":"text","text":" exception,"},{"text":" ","type":"text"},{"type":"text","text":"then this method returns nil. If computation has completed exceptionally or was cancelled, then"},{"text":" ","type":"text"},{"type":"text","text":"the result of this method is not nil."},{"type":"text","text":" "},{"type":"text","text":"If computation was "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()"},{"type":"text","text":" cancelled, then this method returns an"},{"type":"text","text":" "},{"text":"instance of GraalException.","type":"text"}],"url":"\/documentation\/dxfeedframework\/promise\/getexception()","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/complete(result:)":{"type":"topic","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","title":"complete(result:)","abstract":[{"type":"text","text":"Completes computation normally with a specified result."},{"type":"text","text":" "},{"type":"text","text":"This method does nothing if computation has already "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true},{"type":"text","text":" completed"},{"type":"text","text":" "},{"type":"text","text":"(normally, exceptionally, or was cancelled),"}],"kind":"symbol","role":"symbol","url":"\/documentation\/dxfeedframework\/promise\/complete(result:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"complete"},{"kind":"text","text":"("},{"text":"result","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework11MarketEventC","text":"MarketEvent"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/PromiseHandler":{"navigatorTitle":[{"text":"PromiseHandler","kind":"identifier"}],"url":"\/documentation\/dxfeedframework\/promise\/promisehandler","kind":"symbol","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PromiseHandler","kind":"identifier"}],"title":"Promise.PromiseHandler","abstract":[],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/PromiseHandler","role":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isDone()":{"type":"topic","url":"\/documentation\/dxfeedframework\/promise\/isdone()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isDone","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Returns "},{"type":"strong","inlineContent":[{"text":"true","type":"text"}]},{"text":" when computation has","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","isActive":true},{"type":"text","text":" completed normally,"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)","isActive":true},{"type":"text","text":" exceptionally,"},{"type":"text","text":" "},{"text":"or was ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true,"type":"reference"},{"type":"text","text":" canceled"}],"title":"isDone()","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasResult()":{"abstract":[{"text":"Returns ","type":"text"},{"type":"strong","inlineContent":[{"text":"true","type":"text"}]},{"type":"text","text":" when computation has completed normally."},{"type":"text","text":" "},{"text":"Use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()"},{"type":"text","text":" method to get the result of the computation."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasResult"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/dxfeedframework\/promise\/hasresult()","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasResult()","role":"symbol","title":"hasResult()","kind":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getResults()":{"role":"symbol","abstract":[{"text":"Returns results of computation. If computation has no result, then this method returns nil.","type":"text"}],"kind":"symbol","url":"\/documentation\/dxfeedframework\/promise\/getresults()","type":"topic","title":"getResults()","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResults()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getResults","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"preciseIdentifier":"s:15DXFeedFramework11MarketEventC","text":"MarketEvent","kind":"typeIdentifier"},{"text":"]?","kind":"text"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/whenDone(handler:)":{"url":"\/documentation\/dxfeedframework\/promise\/whendone(handler:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"whenDone","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"handler"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC0C7Handlera","text":"PromiseHandler"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Registers a handler to be invoked exactly once when computation "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","type":"reference","isActive":true},{"text":" completes.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The handler’s  method is invoked immediately when this computation has already completed,"},{"type":"text","text":" "},{"text":"otherwise it will be invoked ","type":"text"},{"inlineContent":[{"type":"text","text":"synchronously"}],"type":"strong"},{"text":" in the future when computation","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/complete(result:)","type":"reference","isActive":true},{"text":" completes normally,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)"},{"type":"text","text":" exceptionally,"},{"text":" ","type":"text"},{"type":"text","text":"or is "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true,"type":"reference"},{"type":"text","text":" cancelled from the same thread that had invoked one of the completion methods."}],"title":"whenDone(handler:)","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/whenDone(handler:)","role":"symbol"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/hasException()":{"title":"hasException()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasException","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns "},{"inlineContent":[{"type":"text","text":"true"}],"type":"strong"},{"type":"text","text":" when computation has completed exceptionally or was cancelled."},{"text":" ","type":"text"},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()"},{"type":"text","text":" method to get the exceptional outcome of the computation."}],"url":"\/documentation\/dxfeedframework\/promise\/hasexception()","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/hasException()","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/isCancelled()":{"title":"isCancelled()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isCancelled","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns "},{"type":"strong","inlineContent":[{"type":"text","text":"true"}]},{"text":" when computation was canceled.","type":"text"},{"type":"text","text":" "},{"text":"Use ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()","isActive":true},{"type":"text","text":" method to get the corresponding exception."}],"url":"\/documentation\/dxfeedframework\/promise\/iscancelled()","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isCancelled()","type":"topic"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/await()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"await","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15DXFeedFramework7PromiseC","text":"Promise","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await()","abstract":[{"text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion.","type":"text"},{"text":" ","type":"text"},{"text":"This method waits forever.","type":"text"}],"kind":"symbol","url":"\/documentation\/dxfeedframework\/promise\/await()","type":"topic","title":"await()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/await(millis:)":{"url":"\/documentation\/dxfeedframework\/promise\/await(millis:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/await(millis:)","title":"await(millis:)","role":"symbol","abstract":[{"text":"Wait for computation to complete and return its result or throw an exception in case of exceptional completion.","type":"text"},{"type":"text","text":" "},{"text":"If the wait times out, then the computation is ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true},{"type":"text","text":" cancelled and exception is thrown."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"await"},{"kind":"text","text":"("},{"kind":"externalParam","text":"millis"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15DXFeedFramework7PromiseC","kind":"typeIdentifier","text":"Promise"}]},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/cancel()":{"type":"topic","url":"\/documentation\/dxfeedframework\/promise\/cancel()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cancel"},{"text":"()","kind":"text"}],"title":"cancel()","abstract":[{"type":"text","text":"Cancels computation. This method does nothing if computation has already "},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true,"type":"reference"},{"text":" completed.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/allOf(promises:)":{"title":"allOf(promises:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"allOf","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"promises"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework7PromiseC","text":"Promise"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Promise","preciseIdentifier":"s:15DXFeedFramework7PromiseC","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[{"text":"Returns a new promise that ","type":"text"},{"identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","type":"reference","isActive":true},{"text":" completes when all promises from the given array","type":"text"},{"text":" ","type":"text"},{"text":"complete normally or exceptionally.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The results of the given promises are not reflected in the returned promise, but may be"},{"text":" ","type":"text"},{"type":"text","text":"obtained by inspecting them individually. If no promises are provided, returns a promise completed"},{"type":"text","text":" "},{"type":"text","text":"with the value null."},{"type":"text","text":" "},{"type":"text","text":"When the resulting promise completes for any reason "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/cancel()","isActive":true},{"type":"text","text":" canceled, for example)"},{"type":"text","text":" "},{"type":"text","text":"then all of the promises from the given array are canceled."}],"type":"topic","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/allOf(promises:)","url":"\/documentation\/dxfeedframework\/promise\/allof(promises:)"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise":{"type":"topic","url":"\/documentation\/dxfeedframework\/promise","navigatorTitle":[{"text":"Promise","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Promise","kind":"identifier"}],"title":"Promise","abstract":[{"type":"text","text":"Result of a computation that will be completed normally or exceptionally in the future."},{"type":"text","text":" "},{"type":"text","text":"This class is designed to represent a promise to deliver certain result."}],"kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/completeExceptionally(_:)":{"type":"topic","url":"\/documentation\/dxfeedframework\/promise\/completeexceptionally(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"completeExceptionally"},{"kind":"text","text":"("},{"text":"GraalException","kind":"typeIdentifier","preciseIdentifier":"s:15DXFeedFramework14GraalExceptionO"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"text":"Completes computation exceptionally with a specified exception.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This method does nothing if computation has already "},{"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/isDone()","isActive":true},{"type":"text","text":" completed,"},{"type":"text","text":" "},{"type":"text","text":"otherwise "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getException()"},{"type":"text","text":" will return the specified exception."}],"title":"completeExceptionally(_:)","kind":"symbol","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/completeExceptionally(_:)"},"doc://com.dxfeed.DXFeedFramework/documentation/DXFeedFramework/Promise/getResult()":{"url":"\/documentation\/dxfeedframework\/promise\/getresult()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getResult","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"MarketEvent","preciseIdentifier":"s:15DXFeedFramework11MarketEventC"},{"text":"?","kind":"text"}],"type":"topic","role":"symbol","abstract":[{"text":"Returns results of computation. If computation has no result, then this method returns nil.","type":"text"}],"title":"getResult()","identifier":"doc:\/\/com.dxfeed.DXFeedFramework\/documentation\/DXFeedFramework\/Promise\/getResult()","kind":"symbol"}}}